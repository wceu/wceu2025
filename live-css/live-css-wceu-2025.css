/***
 * This CSS will be included in WordCamp Europe 2025 every time
 * you will make a repository commit and reload remote CSS from the website
 * admin view (Appearance -> Remote CSS) or visiting
 * https://europe.wordcamp.org/2025/wp-admin/admin-ajax.php?action=wcrcss_webhook
 * https://europe.wordcamp.org/2025/ CSS will be synched with this file
 *
 * Development environment is on https://wceutest.wordcamp.org/2025 and also includes
 * this remote CSS. Update CSS from the website admin view (Appearance -> Remote CSS)
 * or visiting https://wceutest.wordcamp.org/2025/wp-admin/admin-ajax.php?action=wcrcss_webhook

 * Don't use post IDs as selectors because they can change between development environment and production.
 * Instead, use the slug; e.g. body.post-slug-call-for-volunteers, body.page-slug-accommodation or better,
 * create a class and use it on the element because we can reuse these classes.
 *
 * CSS vars defined on website Theme (vars values can change during the development process):
 *  --wp--preset--color--custom-orange-primary: #f04614;
 *  --wp--preset--color--custom-light-blue-primary: #1ec8dc;
 *  --wp--preset--color--custom-black-primary: #00000f;
 *  --wp--preset--color--custom-pink-secondary: #faaff0;
 *  --wp--preset--color--custom-yellow-secondary: #ffe65f;
 *  --wp--preset--color--custom-white-secondary: #f5f5f5;
 *
 *  --wp--preset--font-family--body: "Inter", sans-serif;
 *  --wp--preset--font-family--heading: Cardo;
 */


/* Styles for the Header Intro with Blend Element */

:root {
	/*
	Some custom properties for sizes, so we don't need to repeat the values.
	Most sizes use clamp() to have a min and max value, and a value that grows with the viewport width.
	The values in comments are the viewport width range where the value is applied.
	e.g 40px for 1200px screen, and 400px for 2400px screen. The inbetwen values are calculated by the browser.

	---

	Remote CSS seems to remove custom properties, so we only need them here as reference.

  	--width__blend-element: clamp( 40px, calc(-320px + 30vw), 400px ); screen size: 1200 - 2400
	--height__blend-element: 100%;

	--height__second-row: clamp( 60px, calc( 60px + 7.5vw ), 180px ); screen size: 0 - 1600
	--height__third-row: clamp( 20px, calc( 20px + 2vw ), 40px ); screen size: 0 - 1000

	--width__second-row-first-col: clamp( 200px, calc( 80px + 60vw ), 800px ); screen size: 200 - 1200
	 */
}

.wp-block-group:has(>.blend-element) {
	position: relative; /* the blend is element is absolute, so we need relative here */
}

/* The blend element, which overlays some of the colors */
.blend-element {
	position: absolute;
	z-index: 1;
	bottom: 0;
	left: 0;
	padding: 0;
	width: clamp( 40px, calc(-320px + 30vw), 400px );
	height: 100%;
	background: #1ec8dc;
	mix-blend-mode: multiply;
}

/* Use the same color for the header, as is used in the blend element */
body:has(.blend-element.has-custom-pink-secondary-background-color) header.wp-block-template-part > .wp-block-group.has-background {
	background: linear-gradient( 90deg, var( --wp--preset--color--custom-pink-secondary ) 45% , var( --wp--preset--color--base-2 ) 45% ) !important;
}
body:has(.blend-element.has-custom-light-blue-primary-background-color) header.wp-block-template-part > .wp-block-group.has-background {
	background: linear-gradient( 90deg, var( --wp--preset--color--custom-light-blue-primary ) 45% , var( --wp--preset--color--base-2 ) 45% ) !important;
}
body:has(.blend-element.has-custom-orange-primary-background-color) header.wp-block-template-part > .wp-block-group.has-background {
	background: linear-gradient( 90deg, var( --wp--preset--color--custom-orange-primary ) 45% , var( --wp--preset--color--base-2 ) 45% ) !important;
}

.second-row .wp-block-spacer {
	height: clamp( 60px, calc( 60px + 7.5vw ), 180px ) !important; /* we need important, because the spacer has a fixed height */
}

.second-row .wp-block-column:first-child {
	flex-basis: auto !important;
	flex-grow: 0 !important;
	width: clamp( 200px, calc( 80px + 60vw ), 800px ) !important; /* we need important, because the column has a fixed width */
}

.third-row .wp-block-spacer {
	height: clamp( 20px, calc( 20px + 2vw ), 40px ) !important; /* we need important, because the spacer has a fixed height */
}

/* Styles for smaller screens. Does not need to be 799, can be somethin else in the future. */
@media screen and (max-width: 799px) {
	.blend-element {
		width: clamp( 40px, calc(40px + 15vw), 160px );
		height: calc( clamp( 60px, calc( 60px + 7.5vw ), 180px ) + ( clamp( 60px, calc( 60px + 7.5vw ), 180px ) / 3 * 2 ) + clamp( 20px, calc( 20px + 2vw ), 40px ) )
	}
	.first-row > .wp-block-group {
		padding-top: calc( clamp( 60px, calc( 60px + 7.5vw ), 180px ) / 2 );
		padding-bottom: clamp( 60px, calc( 60px + 7.5vw ), 180px );
	}
}

/* Additional Heading styles */

h1.wc25-medium {
  font-size: 4.5rem;
  line-height: 1;
}

h1.wc25-small {
  font-size: 3.5rem;
  line-height: 1;
}

h2.wc25-medium {
  font-size: 3.5rem;
  line-height: 1;
}

h2.wc25-small {
  font-size: 3rem;
  line-height: 1;
}

h3.wc25-medium {
  font-size: 3rem;
  line-height: 1;
}

h3.wc25-small {
  font-size: 2.5rem;
  line-height: 1;
}

h4.wc25-medium {
  font-size: 2.5rem;
  line-height: 1;
}

h4.wc25-small {
  font-size: 2rem;
  line-height: 1;
}

h5.wc25-medium {
  font-size: 1.75rem;
  line-height: 1.29;
}

h5.wc25-small {
  font-size: 1.5rem;
  line-height: 1.33;
}

h6.wc25-medium {
  font-size: 1.25rem;
  line-height: 1.4;
}

h6.wc25-small {
  font-size: 1.125rem;
  line-height: 1.33;
}

/* Additional paragraph styles */

p.wc25-p-small {
  font-size: 0.875rem;
  line-height: 1.43;
}

p.wc25-p-default {
  font-size: 1rem;
  line-height: 1.5;
}

p.wc25-p-large {
  font-size: 1.25rem;
  line-height: 1.4;
}

p.wc25-p-large-small {
  font-size: 1.125rem;
  line-height: 1.44;
}

p.wc25-p-large-bold {
  font-weight: 700;
}

p.wc25-p-large-bold-small {
  font-size: 1.125rem;
  line-height: 1.44;
}
